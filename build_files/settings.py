"""
Django settings for ScrumMaster project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime
from configparser import ConfigParser
from decouple import config, Csv
parser = ConfigParser()
parser.read('settings.ini')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7#q7y(_xapfhvt9j=6s!*924&y3975c0&3d03g0h8w6$e!ei9k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
#    'channels',
#    'channels_redis',
    'Scrum.apps.ScrumConfig',
    'rest_framework',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
]


'''
#Uncomment this on deployment.
INSTALLED_APPS += [
    'Courses.apps.CoursesConfig',
    'home.apps.HomeConfig',
]
'''

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
}

JWT_AUTH = {
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'Scrum.views.jwt_response_payload_handler',
    'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=24),
}

ROOT_URLCONF = 'ScrumMaster.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ScrumMaster.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'chat',
        'USER': 'linuxjobbermaster',
        'PASSWORD': '1qaz#EDC3edc',
        'HOST': '54.244.76.22',
        'PORT': '3306',
        'OPTIONS': {
            #'raise_on_warnings': False,
            #'use_pure': True
        }
    }
}

# Email backend

EMAIL_USE_TLS = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.linuxjobber.com'
EMAIL_HOST_PASSWORD = 'm4k3Aw!y'
EMAIL_HOST_USER = 'admin@linuxjobber.com'
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

#Uncomment this on deployment.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'asset'),
    )

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
LOGIN_REDIRECT_URL = '/home'

#ASGI_APPLICATION = "ScrumMaster.routing.application"

#Uncomment if you have redis.
#CHANNEL_LAYERS = {
#    'default': {
#        'BACKEND': 'channels_redis.core.RedisChannelLayer',
#        'CONFIG': {
#            'hosts': [('redis', 6379)]
#        }
#    }
#}
FRONTEND = 'https://live.chatscrum.com'

SECURE_SSL_REDIRECT = False

# AWS_ACCESS_KEY_ID = 'AKIA3TZ6IUIDQJSPSYN3'
# AWS_SECRET_ACCESS_KEY = '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'

# AWS_ACCESS_KEY_ID = 'AKIA6RSO4E74JYIVHGEC'
# AWS_SECRET_ACCESS_KEY = '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'

#=============================USING THIS========================================
# AWS_ACCESS_KEY_ID = 'AKIA6RSO4E74OGDWW6Z3'
# AWS_SECRET_ACCESS_KEY = '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'
# AWS_WS_GATEWAY = 'https://6vpxcuvqe4.execute-api.us-west-2.amazonaws.com/dev/'
# REGION = 'us-west-2'
#===============================================================================

# AWS_ACCESS_KEY_ID = 'AKIA6RSO4E74CJCKMJ7T'
# AWS_SECRET_ACCESS_KEY = 'LEOXPqG6hOwqneYGVJuBzOmg3leyBsuUExkuPk/0C'

# REGION = 'us-west-2'
#AWS_ACCESS_KEY_ID = 'AKIAI2URT47SJF4N763Q'
#AWS_SECRET_ACCESS_KEY = '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'

# AWS_ACCESS_KEY_ID = 'AKIA6RSO4E74CJCKMJ7T'
# AWS_SECRET_ACCESS_KEY = 'LEOXPqG6hOwqneYGVJuBzOmg3leyBsuUExkuPk/0C'

# REGION = 'us-west-2'
#REGION = 'us-east-2'

#AWS_WS_GATEWAY = 'https://9zvbc650m4.execute-api.us-east-2.amazonaws.com/chatscrum/'




#AWS_ACCESS_KEY_ID = parser.get('aws_credentials', 'AWS_ACCESS_KEY_ID')
#AWS_SECRET_ACCESS_KEY = parser.get('aws_credentials', 'AWS_SECRET_ACCESS_KEY')
#REGION = parser.get('aws_credentials', 'REGION')
#AWS_WS_GATEWAY = parser.get('aws_credentials', 'AWS_WS_GATEWAY')


#SLACK_VERIFICATION_TOKEN = parser.get('slack_credentials', 'SLACK_VERIFICATION_TOKEN') 
#CLIENT_ID = parser.get('slack_credentials', 'CLIENT_ID') 
#CLIENT_SECRET = parser.get('slack_credentials', 'CLIENT_SECRET')
#FRONTEND = parser.get('slack_credentials', 'FRONTEND')

AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', '')
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY', '')


#REGION = config('REGION', '')

AWS_REGION = config('AWS_REGION', '')

AWS_WS_GATEWAY = config('AWS_WS_GATEWAY', '')


SLACK_APP_TOKEN = config('SLACK_APP_TOKEN', '')
SLACK_CLIENT_ID = config('SLACK_CLIENT_ID', '')
SLACK_CLIENT_SECRET = config('SLACK_CLIENT_SECRET', '')

